// Implements GraphQL resolver which allows to query token assets by their
// status, it has a following type signature:
// (
//    where:{status: 'Queued'|'URIParseFailed'|'ContentFetchFailed'|'ContentParseFailed'|'Linked'},
//    size: number
//    after?: string
//    before?: string
// ) => TokenAsset[])
CreateFunction({
  name: 'findTokenAssets',
  body: Query(
    Lambda(
      ['where', 'size', 'after', 'before'],
      Let(
        {
          status: Select('status', Var('where')),
          match: Match(Index('tokenAsset_by_status'), Var('status')),
          refs: Call('paginate', Var('match'), {
            size: Var('size'),
            after: Var('after'),
            before: Var('before'),
          }),
        },
        Map(Var('refs'), Lambda('ref', Get(Var('ref'))))
      )
    )
  ),
})
